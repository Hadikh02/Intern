// <auto-generated />
using System;
using Intern.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intern.Migrations
{
    [DbContext(typeof(InternContext))]
    [Migration("20250706101430_AddUserIDAsForeignKeyInNotificationTable")]
    partial class AddUserIDAsForeignKeyInNotificationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Intern.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeOnly>("TimeAllocation")
                        .HasColumnType("time");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Agenda__3214EC0700586F3E");

                    b.HasIndex("MeetingId");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("Intern.Models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsRecorded")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("MeetingDate")
                        .HasColumnType("date");

                    b.Property<string>("RecordingPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("RecordingUploadedAt")
                        .HasColumnType("date");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Meeting__3214EC07A4CD6D11");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Meeting", (string)null);
                });

            modelBuilder.Entity("Intern.Models.MeetingAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<bool>("HasAudio")
                        .HasColumnType("bit");

                    b.Property<bool>("HasVideo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandRaised")
                        .HasColumnType("bit");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__MeetingA__3214EC078877D9C0");

                    b.HasIndex("MeetingId");

                    b.HasIndex("UserId");

                    b.ToTable("MeetingAttendee", (string)null);
                });

            modelBuilder.Entity("Intern.Models.Minute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignAction")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MeetingAttendeeId")
                        .HasColumnType("int");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Minute__3214EC07F2B69FFF");

                    b.HasIndex("MeetingAttendeeId");

                    b.HasIndex("MeetingId");

                    b.ToTable("Minute", (string)null);
                });

            modelBuilder.Entity("Intern.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__20CF2E129E0B21BD");

                    b.HasIndex("MeetingId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("Intern.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("HasProjector")
                        .HasColumnType("bit");

                    b.Property<bool>("HasVideo")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Room__3214EC07F7CC2ACE");

                    b.HasIndex("UserId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Intern.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07C18C929F");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105347D00AED9")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Intern.Models.Agenda", b =>
                {
                    b.HasOne("Intern.Models.Meeting", "Meeting")
                        .WithMany("Agenda")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK_Agenda_Meeting");

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("Intern.Models.Meeting", b =>
                {
                    b.HasOne("Intern.Models.Room", "Room")
                        .WithMany("Meetings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Meeting__RoomId__412EB0B6");

                    b.HasOne("Intern.Models.User", "User")
                        .WithMany("Meetings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Meeting__UserId__403A8C7D");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Intern.Models.MeetingAttendee", b =>
                {
                    b.HasOne("Intern.Models.Meeting", "Meeting")
                        .WithMany("MeetingAttendees")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK__MeetingAt__Meeti__49C3F6B7");

                    b.HasOne("Intern.Models.User", "User")
                        .WithMany("MeetingAttendees")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__MeetingAt__UserI__4AB81AF0");

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Intern.Models.Minute", b =>
                {
                    b.HasOne("Intern.Models.MeetingAttendee", "MeetingAttendee")
                        .WithMany("Minutes")
                        .HasForeignKey("MeetingAttendeeId")
                        .HasConstraintName("FK_Minute_MeetingAttendee");

                    b.HasOne("Intern.Models.Meeting", "Meeting")
                        .WithMany("Minutes")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK__Minute__MeetingI__45F365D3");

                    b.Navigation("Meeting");

                    b.Navigation("MeetingAttendee");
                });

            modelBuilder.Entity("Intern.Models.Notification", b =>
                {
                    b.HasOne("Intern.Models.Meeting", "Meeting")
                        .WithMany("Notifications")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Meeting");

                    b.HasOne("Intern.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Intern.Models.Room", b =>
                {
                    b.HasOne("Intern.Models.User", "User")
                        .WithMany("Rooms")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Room_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Intern.Models.Meeting", b =>
                {
                    b.Navigation("Agenda");

                    b.Navigation("MeetingAttendees");

                    b.Navigation("Minutes");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Intern.Models.MeetingAttendee", b =>
                {
                    b.Navigation("Minutes");
                });

            modelBuilder.Entity("Intern.Models.Room", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("Intern.Models.User", b =>
                {
                    b.Navigation("MeetingAttendees");

                    b.Navigation("Meetings");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
